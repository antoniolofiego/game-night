-- This script was generated by the Schema Diff utility in pgAdmin 4
-- For the circular dependencies, the order in which Schema Diff writes the objects is not very sophisticated
-- and may require manual changes to the script to ensure changes are applied in the correct order.
-- Please report an issue for any failure with the reproduction steps.

CREATE TABLE IF NOT EXISTS public.boardgames
(
    created_at timestamp with time zone DEFAULT now(),
    bgg_id bigint NOT NULL,
    name text COLLATE pg_catalog."default",
    "minPlayers" integer,
    "maxPlayers" integer,
    thumbnail text COLLATE pg_catalog."default",
    image text COLLATE pg_catalog."default",
    description text COLLATE pg_catalog."default",
    "playingTime" bigint,
    bgg_rank bigint,
    weight double precision,
    rating double precision,
    mechanics text[] COLLATE pg_catalog."default",
    categories text[] COLLATE pg_catalog."default",
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    CONSTRAINT boardgames_pkey PRIMARY KEY (id),
    CONSTRAINT boardgames_bgg_id_key UNIQUE (bgg_id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.boardgames
    OWNER to supabase_admin;

GRANT ALL ON TABLE public.boardgames TO anon;

GRANT ALL ON TABLE public.boardgames TO authenticated;

GRANT ALL ON TABLE public.boardgames TO postgres;

GRANT ALL ON TABLE public.boardgames TO service_role;

GRANT ALL ON TABLE public.boardgames TO supabase_admin;

CREATE TABLE IF NOT EXISTS public.categories
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    created_at timestamp with time zone DEFAULT now(),
    name text COLLATE pg_catalog."default",
    CONSTRAINT categories_pkey PRIMARY KEY (id),
    CONSTRAINT categories_name_key UNIQUE (name)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.categories
    OWNER to supabase_admin;

GRANT ALL ON TABLE public.categories TO anon;

GRANT ALL ON TABLE public.categories TO authenticated;

GRANT ALL ON TABLE public.categories TO postgres;

GRANT ALL ON TABLE public.categories TO service_role;

GRANT ALL ON TABLE public.categories TO supabase_admin;

CREATE TABLE IF NOT EXISTS public.mechanics
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    created_at timestamp with time zone DEFAULT now(),
    name text COLLATE pg_catalog."default",
    CONSTRAINT mechanics_pkey PRIMARY KEY (id),
    CONSTRAINT mechanics_name_key UNIQUE (name)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.mechanics
    OWNER to supabase_admin;

GRANT ALL ON TABLE public.mechanics TO anon;

GRANT ALL ON TABLE public.mechanics TO authenticated;

GRANT ALL ON TABLE public.mechanics TO postgres;

GRANT ALL ON TABLE public.mechanics TO service_role;

GRANT ALL ON TABLE public.mechanics TO supabase_admin;

CREATE TABLE IF NOT EXISTS public.users
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    created_at timestamp with time zone DEFAULT now(),
    bgg_username text COLLATE pg_catalog."default",
    CONSTRAINT users_pkey PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.users
    OWNER to supabase_admin;

GRANT ALL ON TABLE public.users TO anon;

GRANT ALL ON TABLE public.users TO authenticated;

GRANT ALL ON TABLE public.users TO postgres;

GRANT ALL ON TABLE public.users TO service_role;

GRANT ALL ON TABLE public.users TO supabase_admin;

CREATE TABLE IF NOT EXISTS public."userCollections"
(
    bgg_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    user_id uuid NOT NULL,
    CONSTRAINT "userCollections_pkey" PRIMARY KEY (bgg_id, user_id),
    CONSTRAINT "userCollections_bgg_id_fkey" FOREIGN KEY (bgg_id)
        REFERENCES public.boardgames (bgg_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "userCollections_user_id_fkey" FOREIGN KEY (user_id)
        REFERENCES public.users (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."userCollections"
    OWNER to supabase_admin;

GRANT ALL ON TABLE public."userCollections" TO anon;

GRANT ALL ON TABLE public."userCollections" TO authenticated;

GRANT ALL ON TABLE public."userCollections" TO postgres;

GRANT ALL ON TABLE public."userCollections" TO service_role;

GRANT ALL ON TABLE public."userCollections" TO supabase_admin;
